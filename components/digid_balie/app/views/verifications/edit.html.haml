
-# Deze broncode is openbaar gemaakt vanwege een Woo-verzoek zodat deze
-# gericht is op transparantie en niet op hergebruik. Hergebruik van 
-# de broncode is toegestaan onder de EUPL licentie, met uitzondering 
-# van broncode waarvoor een andere licentie is aangegeven.
-# 
-# Het archief waar dit bestand deel van uitmaakt is te vinden op:
-#   https://github.com/MinBZK/woo-besluit-broncode-digid
-# 
-# Eventuele kwetsbaarheden kunnen worden gemeld bij het NCSC via:
-#   https://www.ncsc.nl/contact/kwetsbaarheid-melden
-# onder vermelding van "Logius, openbaar gemaakte broncode DigiD" 
-# 
-# Voor overige vragen over dit Woo-besluit kunt u mailen met open@logius.nl
-# 
-# This code has been disclosed in response to a request under the Dutch
-# Open Government Act ("Wet open Overheid"). This implies that publication 
-# is primarily driven by the need for transparence, not re-use.
-# Re-use is permitted under the EUPL-license, with the exception 
-# of source files that contain a different license.
-# 
-# The archive that this file originates from can be found at:
-#   https://github.com/MinBZK/woo-besluit-broncode-digid
-# 
-# Security vulnerabilities may be responsibly disclosed via the Dutch NCSC:
-#   https://www.ncsc.nl/contact/kwetsbaarheid-melden
-# using the reference "Logius, publicly disclosed source code DigiD" 
-# 
-# Other questions regarding this Open Goverment Act decision may be
-# directed via email to open@logius.nl

- if Configuration.get_boolean("balie_aanvraag_voor_rni")
  %h1= t('id_verification_rni')

  = extended_form_for(@form, url: verification_path(@verification), method: :patch) do |f|
    = f.header
    = f.citizen_service_number_field(readonly: true)
    = f.text_field(:surname, label: t('surname'), readonly: true)
    = f.text_field(:first_names, label: t('first_names'), readonly: true)
    = f.text_field(:birthday, label: t('birthday'), readonly: true, value: birthday_for_display(@verification.birthday))
    = f.radio_buttons(:id_established, [[t('yeah'), true], [t('nope'), false]], label: t('id_established_rni'), required: true)

    = actions do
      = action_submit(t('next'))
      = action_link(t('cancel'), verification_path(@verification), :right, method: :delete)

- else
  %h1= t('id_verification')

  = extended_form_for(@form, url: verification_path(@verification), method: :patch) do |f|
    = f.header
    = f.citizen_service_number_field(readonly: true)
    = f.text_field(:surname, label: t('surname'), readonly: true)
    = f.text_field(:first_names, label: t('first_names'), readonly: true)
    = f.text_field(:birthday, label: t('birthday'), readonly: true, value: birthday_for_display(@verification.birthday))
    = f.text_field(:nationality, label: t('nationality'), readonly: true)
    = f.text_field(:id_number, label: t('id_number'), readonly: true)
    = f.text_field(:id_expires_at, label: t('expires_at'), readonly: true, value: l(@verification.id_expires_at, format: :default))
    = f.radio_buttons(:id_established, [[t('yeah'), true], [t('nope'), false]], label: t('id_established'), required: true)
    = f.radio_buttons(:id_signaled, [[t('yeah'), true], [t('nope'), false]], label: t('id_signaled'), required: true, something_value: @verification.id_signaled)
    = f.check_box(:suspected_fraud, box_label: t('suspected_fraud'))

    = actions do
      = action_submit(t('typo_correction'), :left, name: 'correct')
      = action_submit(t('next'))
      = action_link(t('cancel'), verification_path(@verification), :right, method: :delete)
