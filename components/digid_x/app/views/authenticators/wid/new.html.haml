
-# Deze broncode is openbaar gemaakt vanwege een Woo-verzoek zodat deze
-# gericht is op transparantie en niet op hergebruik. Hergebruik van 
-# de broncode is toegestaan onder de EUPL licentie, met uitzondering 
-# van broncode waarvoor een andere licentie is aangegeven.
-# 
-# Het archief waar dit bestand deel van uitmaakt is te vinden op:
-#   https://github.com/MinBZK/woo-besluit-broncode-digid
-# 
-# Eventuele kwetsbaarheden kunnen worden gemeld bij het NCSC via:
-#   https://www.ncsc.nl/contact/kwetsbaarheid-melden
-# onder vermelding van "Logius, openbaar gemaakte broncode DigiD" 
-# 
-# Voor overige vragen over dit Woo-besluit kunt u mailen met open@logius.nl
-# 
-# This code has been disclosed in response to a request under the Dutch
-# Open Government Act ("Wet open Overheid"). This implies that publication 
-# is primarily driven by the need for transparence, not re-use.
-# Re-use is permitted under the EUPL-license, with the exception 
-# of source files that contain a different license.
-# 
-# The archive that this file originates from can be found at:
-#   https://github.com/MinBZK/woo-besluit-broncode-digid
-# 
-# Security vulnerabilities may be responsibly disclosed via the Dutch NCSC:
-#   https://www.ncsc.nl/contact/kwetsbaarheid-melden
-# using the reference "Logius, publicly disclosed source code DigiD" 
-# 
-# Other questions regarding this Open Goverment Act decision may be
-# directed via email to open@logius.nl

= webservice.present? ? heading_with_icon(t('log_in_at_only'), webservice_name) : heading_with_icon(t('log_in'))
- if wrapped_session.expires_at.present?
  = render('shared/session_countdown', key: 'no_extension')
- login_notice_key = @document_type == "NL-rijbewijs" ? "hoog" : "hoog_id_card"

- if android_browser? || ios_device_with_nfc?
  %h2.orange_heading= t('texts.choose_card_reader_method')
  - if @document_type == "NL-Rijbewijs"
    = block_with_icon(t('hoog', scope: 'digid_app.login_notice', rdw_issue_date: I18n.l(Date.parse(::Configuration.get_string('rdw_vanaf_datum_uitgifte_nieuwe_rijbewijzen')), format: '%e %B %Y')).html_safe, :information)
  - else
    = block_with_icon(t('hoog_id_card', scope: 'digid_app.login_notice', rvig_issue_date: I18n.l(Date.parse(::Configuration.get_string('rvig_vanaf_datum_uitgifte_nieuwe_identiteitskaarten')), format: '%e %B %Y')).html_safe, :information)
  %a.login_tile.highlighted.smartphone.small_font{ href: wid_web_to_app_url }
    %h2
      %span= t('app.open_on_this_device')
    = icon("3941-delta-links-24px", css_class: "right")
  %a.login_tile.smartphone{ href: wid_new_url(card_reader_type: "app", wid_type: @document_type) }
    %h2
      %span= t('app.open_on_other_device')
    = icon("3941-delta-links-24px", css_class: "right")
- elsif !ios_browser?
  %h2.orange_heading= t('login_id_which_device')
  - if @document_type == "NL-Rijbewijs"
    = block_with_icon(t('hoog', scope: 'digid_app.login_notice', rdw_issue_date: I18n.l(Date.parse(::Configuration.get_string('rdw_vanaf_datum_uitgifte_nieuwe_rijbewijzen')), format: '%e %B %Y')).html_safe, :information)
  - else
    = block_with_icon(t('hoog_id_card', scope: 'digid_app.login_notice', rvig_issue_date: I18n.l(Date.parse(::Configuration.get_string('rvig_vanaf_datum_uitgifte_nieuwe_identiteitskaarten')), format: '%e %B %Y')).html_safe, :information)
  %a.login_tile.active.smartphone.small_font{ href: wid_new_url(card_reader_type: "app", wid_type: @document_type) }
    %h2
      %span= t('with_the_digid_app')
    = icon("3941-delta-links-24px", css_class: "right")
  %a.login_tile.active.usb_reader.small_font{ href: wid_new_url(card_reader_type: "usb_reader", wid_type: @document_type) }
    %h2
      %span= t('with_a_usb_card_reader')
    = icon("3941-delta-links-24px", css_class: "right")
= actions do
  = cancel_button(sign_in_url, action: :previous, arrow: true)

%ul.list-with-arrows
  %li
    = external_link_to(t('app_instruction_links'), 'https://www.digid.nl/identiteitsbewijs')
