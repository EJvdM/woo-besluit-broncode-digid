
-# Deze broncode is openbaar gemaakt vanwege een Woo-verzoek zodat deze
-# gericht is op transparantie en niet op hergebruik. Hergebruik van 
-# de broncode is toegestaan onder de EUPL licentie, met uitzondering 
-# van broncode waarvoor een andere licentie is aangegeven.
-# 
-# Het archief waar dit bestand deel van uitmaakt is te vinden op:
-#   https://github.com/MinBZK/woo-besluit-broncode-digid
-# 
-# Eventuele kwetsbaarheden kunnen worden gemeld bij het NCSC via:
-#   https://www.ncsc.nl/contact/kwetsbaarheid-melden
-# onder vermelding van "Logius, openbaar gemaakte broncode DigiD" 
-# 
-# Voor overige vragen over dit Woo-besluit kunt u mailen met open@logius.nl
-# 
-# This code has been disclosed in response to a request under the Dutch
-# Open Government Act ("Wet open Overheid"). This implies that publication 
-# is primarily driven by the need for transparence, not re-use.
-# Re-use is permitted under the EUPL-license, with the exception 
-# of source files that contain a different license.
-# 
-# The archive that this file originates from can be found at:
-#   https://github.com/MinBZK/woo-besluit-broncode-digid
-# 
-# Security vulnerabilities may be responsibly disclosed via the Dutch NCSC:
-#   https://www.ncsc.nl/contact/kwetsbaarheid-melden
-# using the reference "Logius, publicly disclosed source code DigiD" 
-# 
-# Other questions regarding this Open Goverment Act decision may be
-# directed via email to open@logius.nl

%h2.orange_heading= t('test_zekerheidsniveau.subheading')
= flash_alert
= flash_notice
= extended_form_for(@auth, url: test_betrouwbaarheids_niveau_url, html: { :class => 'remember_login' }) do |form|
  #test-zekerheidsniveau-login
    = form.header(nil, base: :authentication, show_fields_required: false)
    = block_with_icon(t('test_zekerheidsniveau.information_message_html'), :information, id: 'test_zekerheidsniveau_information')
    = form.hidden_field(:type_account)
    = form.custom_select(:test_zekerheidsniveau, Account::LEVELS.map { |k,v| [t("test_zekerheidsniveau.choices.#{v}"),k] if k.to_i > 9  }.compact, {include_blank: t('test_zekerheidsniveau.choices.blank')}, {hide_required_indicator: true, required: true, label: t("test_zekerheidsniveau.label")})
    = form.text_field(:username, label: t('digid_username'), required: true, autocapitalize: 'none', fieldset_id: 'username-field', hide_required_indicator: true)
    = form.password_field(:password, label: t('password'), required: true, fieldset_id: 'password-field',fieldset_class: "capslock_notifier", example: t('caps_lock_is_on'), toggle_text: true, hide_required_indicator: true)
    = actions do
      = cancel_button(sign_in_url, action: :previous, arrow: true)
      = action_submit(:log_in, arrow: true)
