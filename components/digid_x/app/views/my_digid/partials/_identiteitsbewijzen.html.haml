
-# Deze broncode is openbaar gemaakt vanwege een Woo-verzoek zodat deze
-# gericht is op transparantie en niet op hergebruik. Hergebruik van 
-# de broncode is toegestaan onder de EUPL licentie, met uitzondering 
-# van broncode waarvoor een andere licentie is aangegeven.
-# 
-# Het archief waar dit bestand deel van uitmaakt is te vinden op:
-#   https://github.com/MinBZK/woo-besluit-broncode-digid
-# 
-# Eventuele kwetsbaarheden kunnen worden gemeld bij het NCSC via:
-#   https://www.ncsc.nl/contact/kwetsbaarheid-melden
-# onder vermelding van "Logius, openbaar gemaakte broncode DigiD" 
-# 
-# Voor overige vragen over dit Woo-besluit kunt u mailen met open@logius.nl
-# 
-# This code has been disclosed in response to a request under the Dutch
-# Open Government Act ("Wet open Overheid"). This implies that publication 
-# is primarily driven by the need for transparence, not re-use.
-# Re-use is permitted under the EUPL-license, with the exception 
-# of source files that contain a different license.
-# 
-# The archive that this file originates from can be found at:
-#   https://github.com/MinBZK/woo-besluit-broncode-digid
-# 
-# Security vulnerabilities may be responsibly disclosed via the Dutch NCSC:
-#   https://www.ncsc.nl/contact/kwetsbaarheid-melden
-# using the reference "Logius, publicly disclosed source code DigiD" 
-# 
-# Other questions regarding this Open Goverment Act decision may be
-# directed via email to open@logius.nl

-# --------------------------
-# -- Identiteitsbewijzen
-# --------------------------
- if current_account.bsn.present? && show_digid_hoog?(current_account.bsn)
  %h2#wid_methods.heading-with-separator= t('my_digid.login_methods.wids')

  - if current_account.bsn.present? && show_digid_hoog?(current_account.bsn)
    .table--shades
      .table-row
        .table-cell--overview
          - if show_driving_licence?(current_account.bsn) && show_identity_card?(current_account.bsn)
            %p= t('texts.both_ids', rdw_uitgifte_datum: I18n.l(::Configuration.get_date('rdw_vanaf_datum_uitgifte_nieuwe_rijbewijzen'), format: ('%-d %B %Y')), rvig_uitgifte_datum: I18n.l(::Configuration.get_date('rvig_vanaf_datum_uitgifte_nieuwe_identiteitskaarten'), format: ('%-d %B %Y'))).html_safe
          - elsif show_driving_licence?(current_account.bsn)
            %p= t('texts.driving_licences', rdw_uitgifte_datum: I18n.l(::Configuration.get_date('rdw_vanaf_datum_uitgifte_nieuwe_rijbewijzen'), format: ('%-d %B %Y'))).html_safe
          - elsif show_identity_card?(current_account.bsn)
            %p= t('texts.identity_cards', rvig_uitgifte_datum: I18n.l(::Configuration.get_date('rvig_vanaf_datum_uitgifte_nieuwe_identiteitskaarten'), format: ('%-d %B %Y'))).html_safe
  
    -# Hoog authenticators
    #hoog_authenticators{'data-fetch': "#{!Rails.env.test?}"}
      .row
        .wrap-main
          .col.highlight
            .col.col-name= t('my_digid.login_methods.wids')
            .col.col-val
              = spinner
  -# Rijbewijzen
  #driving_licences{'data-fetch': "#{!Rails.env.test?}"}
  -# Identiteitskaarten
  #identity_cards{'data-fetch': "#{!Rails.env.test?}"}
