
-# Deze broncode is openbaar gemaakt vanwege een Woo-verzoek zodat deze
-# gericht is op transparantie en niet op hergebruik. Hergebruik van 
-# de broncode is toegestaan onder de EUPL licentie, met uitzondering 
-# van broncode waarvoor een andere licentie is aangegeven.
-# 
-# Het archief waar dit bestand deel van uitmaakt is te vinden op:
-#   https://github.com/MinBZK/woo-besluit-broncode-digid
-# 
-# Eventuele kwetsbaarheden kunnen worden gemeld bij het NCSC via:
-#   https://www.ncsc.nl/contact/kwetsbaarheid-melden
-# onder vermelding van "Logius, openbaar gemaakte broncode DigiD" 
-# 
-# Voor overige vragen over dit Woo-besluit kunt u mailen met open@logius.nl
-# 
-# This code has been disclosed in response to a request under the Dutch
-# Open Government Act ("Wet open Overheid"). This implies that publication 
-# is primarily driven by the need for transparence, not re-use.
-# Re-use is permitted under the EUPL-license, with the exception 
-# of source files that contain a different license.
-# 
-# The archive that this file originates from can be found at:
-#   https://github.com/MinBZK/woo-besluit-broncode-digid
-# 
-# Security vulnerabilities may be responsibly disclosed via the Dutch NCSC:
-#   https://www.ncsc.nl/contact/kwetsbaarheid-melden
-# using the reference "Logius, publicly disclosed source code DigiD" 
-# 
-# Other questions regarding this Open Goverment Act decision may be
-# directed via email to open@logius.nl

%h1 Overzicht certificaten webdiensten

.clear

= form_for Certificate.new, url: certificates_path, method: :get do |f|
  %table.half-width
    %tr
      %th
      %th

    %tr
      %td= f.label :organization, "Organisatienaam"
      %td= f.text_field :organization, name: "webservices[organization_id]", value: params.dig(:webservices, :organization_id)

    %tr
      %td= f.label :webservice, "Webdienstnaam"
      %td= f.text_field :webservice, name: "webservices[id]", value: params.dig(:webservices, :id)

    %tr
      %td= label_tag :cert_type, t("model_attributes.certificate.type")
      %td= select_tag "certificate[cert_type]", options_for_select([["TLS", "TLS"], ["SIGNING", "SIGNING"], ["ENCRYPTION", "ENCRYPTION"]], params.dig(:certificate, :cert_type)), include_blank: true

    %tr
      %td= f.label :not_before, t("model_attributes.certificate.not_before")
      %td
        %span.datepicker= date_select("certificate", :not_before, include_blank: true, selected: params.dig(:certificate, :not_before))

    %tr
      %td= f.label :not_after, t("model_attributes.certificate.not_after")
      %td
        %span.datepicker= date_select("certificate", :not_after, include_blank: true, selected: params.dig(:certificate, :not_after))

    %tr
      %td= submit_button 'Filter Â»'
      %td

- if @certificates.any?
  %table
    %thead
      %tr
        = render 'shared/table_header', headers: %w(webdienstnaam model_attributes.certificate.authentication_method organisatienaam model_attributes.certificate.type model_attributes.certificate.not_after)
        %th
        %th
      %tbody
        = render partial: 'certificate', collection: @certificates
        = table_footer 10 do
          = paginate @certificates
- else
  Er konden geen certificaten gevonden worden.

