
-# Deze broncode is openbaar gemaakt vanwege een Woo-verzoek zodat deze
-# gericht is op transparantie en niet op hergebruik. Hergebruik van 
-# de broncode is toegestaan onder de EUPL licentie, met uitzondering 
-# van broncode waarvoor een andere licentie is aangegeven.
-# 
-# Het archief waar dit bestand deel van uitmaakt is te vinden op:
-#   https://github.com/MinBZK/woo-besluit-broncode-digid
-# 
-# Eventuele kwetsbaarheden kunnen worden gemeld bij het NCSC via:
-#   https://www.ncsc.nl/contact/kwetsbaarheid-melden
-# onder vermelding van "Logius, openbaar gemaakte broncode DigiD" 
-# 
-# Voor overige vragen over dit Woo-besluit kunt u mailen met open@logius.nl
-# 
-# This code has been disclosed in response to a request under the Dutch
-# Open Government Act ("Wet open Overheid"). This implies that publication 
-# is primarily driven by the need for transparence, not re-use.
-# Re-use is permitted under the EUPL-license, with the exception 
-# of source files that contain a different license.
-# 
-# The archive that this file originates from can be found at:
-#   https://github.com/MinBZK/woo-besluit-broncode-digid
-# 
-# Security vulnerabilities may be responsibly disclosed via the Dutch NCSC:
-#   https://www.ncsc.nl/contact/kwetsbaarheid-melden
-# using the reference "Logius, publicly disclosed source code DigiD" 
-# 
-# Other questions regarding this Open Goverment Act decision may be
-# directed via email to open@logius.nl

= form_for(@sector, remote: @remote) do |f|
  = render('shared/errors', model: @sector)
  = field(f.label(:pretty_name)) { f.text_field :pretty_name }
  = field(f.label(:name))        { @sector.new_record? || @sector.test? ? (f.text_field :name) : @sector.name }
  = field(f.label(:number_name)) { @sector.new_record? || @sector.test? ? (f.text_field :number_name) : @sector.number_name }
  = field(f.label(:active)) do
    = f.radio_button(:active, true)
    = f.label(:active_true)
    %br
    = f.radio_button(:active, false)
    = f.label(:active_false)
  - if @sector.new_record?
    = field(f.label(:test)) do
      = f.radio_button(:test, true)
      = f.label(:test_true)
      %br
      = f.radio_button(:test, false)
      = f.label(:test_false)
  - else
    = field('Test', t(@sector.test?.to_s))
  = field(f.label(:valid_for))   { f.text_field :valid_for }
  = field(f.label(:warn_before)) { f.text_field :warn_before }

  = render('shared/form_actions', model: @sector)
