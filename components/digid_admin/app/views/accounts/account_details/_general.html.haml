
-# Deze broncode is openbaar gemaakt vanwege een Woo-verzoek zodat deze
-# gericht is op transparantie en niet op hergebruik. Hergebruik van 
-# de broncode is toegestaan onder de EUPL licentie, met uitzondering 
-# van broncode waarvoor een andere licentie is aangegeven.
-# 
-# Het archief waar dit bestand deel van uitmaakt is te vinden op:
-#   https://github.com/MinBZK/woo-besluit-broncode-digid
-# 
-# Eventuele kwetsbaarheden kunnen worden gemeld bij het NCSC via:
-#   https://www.ncsc.nl/contact/kwetsbaarheid-melden
-# onder vermelding van "Logius, openbaar gemaakte broncode DigiD" 
-# 
-# Voor overige vragen over dit Woo-besluit kunt u mailen met open@logius.nl
-# 
-# This code has been disclosed in response to a request under the Dutch
-# Open Government Act ("Wet open Overheid"). This implies that publication 
-# is primarily driven by the need for transparence, not re-use.
-# Re-use is permitted under the EUPL-license, with the exception 
-# of source files that contain a different license.
-# 
-# The archive that this file originates from can be found at:
-#   https://github.com/MinBZK/woo-besluit-broncode-digid
-# 
-# Security vulnerabilities may be responsibly disclosed via the Dutch NCSC:
-#   https://www.ncsc.nl/contact/kwetsbaarheid-melden
-# using the reference "Logius, publicly disclosed source code DigiD" 
-# 
-# Other questions regarding this Open Goverment Act decision may be
-# directed via email to open@logius.nl

.personal_data
  %h3= I18n.t('accounts.headers.general')
  .personal_data_left
    .form_wrapper.relative
      .suspend_account_button= render 'accounts/account_details/change_status'

      = field I18n.t('accounts.fields.labels.status') do
        - present @account, AccountPresenter do |account_presenter|
          = account_presenter.colored_status
        - if @account.blocked?
          %span.red
            \/
            %span.content_blocked Geblokkeerd

      - if @account.blocked?
        %span.red
          = field I18n.t('accounts.fields.labels.blocked_till') do
            %span.content_blocked= l(@account.blocked_till, format: :slash)

      = field I18n.t("accounts.fields.labels.replace_blocked") do
        %span{class: @account.replace_account_blocked ? "red" : "green"}= I18n.t(@account.replace_account_blocked)
        .block_replace_account_button= render 'accounts/account_details/block_replace_account'

      = field I18n.t('accounts.fields.labels.id'), @account.id
      = render @account.sectorcodes
      - if !@account.sectorcodes.blank? && (@account.sectorcodes.first.sector_id == Sector.get('sofi')) && can?(:convert_sofi, Account)
        = field I18n.t('accounts.fields.labels.change_sectorcode') do
          = form_tag convert_sofi_account_path(@account) do
            = submit_button 'SOFI-nummer omzetten in BSN'
      = empty_field
      - if @account.account_histories.any?
        = field I18n.t('accounts.fields.labels.account_histories'), link_to(@account.account_histories.count, histories_account_path(@account), remote: true)
      - else
        = field I18n.t('accounts.fields.labels.account_histories'), I18n.t('accounts.fields.labels.no_history')
      = field t('accounts.fields.labels.preferred_language'), @account.locale.nil? ? I18n.t('accounts.fields.labels.unknown') : I18n.t(@account.locale)


  .personal_data_right
    .form_wrapper
      = field I18n.t('accounts.fields.labels.requested'), time_helper(@account.created_at, :slash)
      = field I18n.t('accounts.fields.labels.updated'), time_helper(@account.updated_at, :slash)
      = field I18n.t('accounts.fields.labels.last_log_in'), time_helper(@account.current_sign_in_at || @account.last_sign_in_at, :slash)

      = field I18n.t('accounts.fields.labels.expiry_date'), @account.vervaldatum
      = field I18n.t('accounts.fields.labels.reason_suspension') do
        - present @account, AccountPresenter do |account_presenter|
          = account_presenter.colored_reason_suspension
      = field I18n.t('accounts.fields.labels.reason_suspension_updated_at'), time_helper(@account.reason_suspension_updated_at, :slash)
      = empty_field
      = empty_field
      = field t('accounts.fields.labels.part_of_pilotgroups'), group_helper(@account.bsn)
