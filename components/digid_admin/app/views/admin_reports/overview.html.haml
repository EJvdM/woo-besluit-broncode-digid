
-# Deze broncode is openbaar gemaakt vanwege een Woo-verzoek zodat deze
-# gericht is op transparantie en niet op hergebruik. Hergebruik van 
-# de broncode is toegestaan onder de EUPL licentie, met uitzondering 
-# van broncode waarvoor een andere licentie is aangegeven.
-# 
-# Het archief waar dit bestand deel van uitmaakt is te vinden op:
-#   https://github.com/MinBZK/woo-besluit-broncode-digid
-# 
-# Eventuele kwetsbaarheden kunnen worden gemeld bij het NCSC via:
-#   https://www.ncsc.nl/contact/kwetsbaarheid-melden
-# onder vermelding van "Logius, openbaar gemaakte broncode DigiD" 
-# 
-# Voor overige vragen over dit Woo-besluit kunt u mailen met open@logius.nl
-# 
-# This code has been disclosed in response to a request under the Dutch
-# Open Government Act ("Wet open Overheid"). This implies that publication 
-# is primarily driven by the need for transparence, not re-use.
-# Re-use is permitted under the EUPL-license, with the exception 
-# of source files that contain a different license.
-# 
-# The archive that this file originates from can be found at:
-#   https://github.com/MinBZK/woo-besluit-broncode-digid
-# 
-# Security vulnerabilities may be responsibly disclosed via the Dutch NCSC:
-#   https://www.ncsc.nl/contact/kwetsbaarheid-melden
-# using the reference "Logius, publicly disclosed source code DigiD" 
-# 
-# Other questions regarding this Open Goverment Act decision may be
-# directed via email to open@logius.nl

%h1= t('report.overview')
.clear
.form_wrapper
  = search_form_for @search, url: overview_admin_reports_url do |f|
    = f.text_field :name_cont
    = submit_button t('filter_button').html_safe, 'filter_reports'
    .clear_filter
    = f.label :created_at_gt, t('report.van')
    %span.datepicker= f.datetime_select :created_at_gt, include_blank: true
    = f.label :created_at_lt, t('report.tot')
    %span.datepicker= f.datetime_select :created_at_lt, { include_blank: true }, class: ('initially_empty' if @search.created_at_lt.nil?)
    .clear_filter
    = f.label :result_eq, t('report.type')
    = f.select :report_type_eq, @permissions, include_blank: true
    .clear_filter
    = f.label :result_eq, t('report.show_only_non_processed_reports')
    = f.select :result_eq, [[t('yes'), true], [t('no'), false]], include_blank: true


%table
  %thead
    %tr
      = render 'shared/table_header', headers: %w(rapportage_naam type gemaakt_op start_cronjob gestart gereed duur records_verwerkt verwerking_ok)

  - @admin_reports.each do |admin_report|
    - present admin_report do |admin_presenter|
      %tr
        %td= admin_presenter.name
        %td= admin_presenter.report_type
        %td= admin_presenter.created_at
        %td= admin_presenter.batch_started_at
        %td= admin_presenter.report_started_at
        %td= admin_presenter.report_ended_at
        %td= admin_presenter.duration
        %td= admin_presenter.lines
        %td= admin_presenter.result
= paginate @admin_reports
= show_manager_actions_for(Log::SubjectTypes::ADMIN_REPORT)
