
-# Deze broncode is openbaar gemaakt vanwege een Woo-verzoek zodat deze
-# gericht is op transparantie en niet op hergebruik. Hergebruik van 
-# de broncode is toegestaan onder de EUPL licentie, met uitzondering 
-# van broncode waarvoor een andere licentie is aangegeven.
-# 
-# Het archief waar dit bestand deel van uitmaakt is te vinden op:
-#   https://github.com/MinBZK/woo-besluit-broncode-digid
-# 
-# Eventuele kwetsbaarheden kunnen worden gemeld bij het NCSC via:
-#   https://www.ncsc.nl/contact/kwetsbaarheid-melden
-# onder vermelding van "Logius, openbaar gemaakte broncode DigiD" 
-# 
-# Voor overige vragen over dit Woo-besluit kunt u mailen met open@logius.nl
-# 
-# This code has been disclosed in response to a request under the Dutch
-# Open Government Act ("Wet open Overheid"). This implies that publication 
-# is primarily driven by the need for transparence, not re-use.
-# Re-use is permitted under the EUPL-license, with the exception 
-# of source files that contain a different license.
-# 
-# The archive that this file originates from can be found at:
-#   https://github.com/MinBZK/woo-besluit-broncode-digid
-# 
-# Security vulnerabilities may be responsibly disclosed via the Dutch NCSC:
-#   https://www.ncsc.nl/contact/kwetsbaarheid-melden
-# using the reference "Logius, publicly disclosed source code DigiD" 
-# 
-# Other questions regarding this Open Goverment Act decision may be
-# directed via email to open@logius.nl

= render "four_eyes_reviews/heading", four_eyes_review: @four_eyes_review
%br
%table{:class => "four_eyes_reviews #{@four_eyes_review.action}"}
  %thead
    %tr
      %th{:colspan=>2}
        - if ['update', 'create'].include? @four_eyes_review.action
          Nieuwe/gewijzigde waarden
      %th{:colspan=>2}
        - if ['update', 'destroy'].include? @four_eyes_review.action
          Oude waarden
  %tbody
    - changes_for @four_eyes_review.original, @four_eyes_review.updated, @four_eyes_review do |changes|
      - changes.text :id
      - changes.text :name
      - changes.nested_changes_for :organization, heading: false do |organization|
        - organization.text :name, label: t('model_attributes.webservice.organization'), link_when: Proc.new {can? :read, Organization}
      - changes.text :website_url
      - changes.text :active, label: t('model_attributes.webservice.status'), true: t('model_attributes.webservice.active_true'), false: t('model_attributes.webservice.active_false')
      - if @four_eyes_review.defined?(:active)
        - changes.text :active_from, date_format: :only_date
        - changes.text :active_until, date_format: :only_date
      - changes.text :substantieel_active, label: t('model_attributes.webservice.substantieel_active'), true: t('model_attributes.webservice.substantieel_active_true'), false: t('model_attributes.webservice.substantieel_active_false')
      - changes.text :app_to_app, label: t('model_attributes.webservice.app_to_app'), true: t('model_attributes.webservice.app_to_app_true'), false: t('model_attributes.webservice.app_to_app_false')
      - changes.hashmap :apps, label: t('model_attributes.webservice.apps')
      - changes.text :check_redirect_url, true: t('model_attributes.webservice.active_true'), false: t('model_attributes.webservice.active_false')
      - if @four_eyes_review.defined?(:check_redirect_url)
        - changes.text :redirect_url_domain
      - changes.text :description
      - changes.text :assurance_from
      - changes.text :assurance_to
      - changes.text :assurance_date, date_format: :only_date

%h2 Sectoren
- if @four_eyes_review.original.sector_authentications.any? || @four_eyes_review.updated.sector_authentications.any?
  %br
  %table{:class => "four_eyes_reviews #{@four_eyes_review.action}"}
    %thead
      %tr
        %th{:colspan=>2}
          - if ['update', 'create'].include? @four_eyes_review.action
            Nieuwe/gewijzigde waarden
        %th{:colspan=>2}
          - if ['update', 'destroy'].include? @four_eyes_review.action
            Oude waarden
    %tbody
      - changes_for @four_eyes_review.original, @four_eyes_review.updated, @four_eyes_review do |changes|
        - changes.nested_changes_for :sector_authentications, order: :position, heading: false, label: t('model_attributes.webservice.sector_authentications'), empty: t('model_attributes.webservice.no_sector_authentications') do |sector_authentication|
          - sector_authentication.text :position, label: t('model_attributes.sector_authentication.position')
          - sector_authentication.nested_changes_for :sector, heading: false do |sector|
            - sector.text :name, label: t('model_attributes.webservice.sector_name')
          - unless [Sector.get('bsn'), Sector.get('a-nummer')].include?(sector_authentication.updated.sector_id)
            - sector_authentication.text :test, true: t('model_attributes.webservice.active_true'), false: t('model_attributes.webservice.active_false')
            - sector_authentication.text :registration, true: t('model_attributes.webservice.active_true'), false: t('model_attributes.webservice.active_false'), label: t('model_attributes.webservice.registration')
            - sector_authentication.text :revocation, true: t('model_attributes.webservice.active_true'), false: t('model_attributes.webservice.active_false')
          - sector_authentication.spacer
- else
  %p Geen

%h2 Certificaten
- if @four_eyes_review.original.certificates.any? || @four_eyes_review.updated.certificates.any?
  %br
  %table{:class => "four_eyes_reviews #{@four_eyes_review.action}"}
    %thead
      %tr
        %th{:colspan=>2}
          - if ['update', 'create'].include? @four_eyes_review.action
            Nieuwe/gewijzigde waarden
        %th{:colspan=>2}
          - if ['update', 'destroy'].include? @four_eyes_review.action
            Oude waarden
    %tbody
      - changes_for @four_eyes_review.original, @four_eyes_review.updated, @four_eyes_review do |changes|
        - changes.nested_changes_for :certificates, heading: false, empty: t('model_attributes.webservice.no_certificates') do |certificate|
          - certificate.text :distinguished_name, download_link: :as_data_uri, filename: :filename, label: t('model_attributes.webservice.certificate')
          - certificate.text :fingerprint, label: t('model_attributes.webservice.fingerprint')
- else
  %p Geen

%h2 Authenticatie methoden
%br
%table{:class => "four_eyes_reviews #{@four_eyes_review.action}"}
  %thead
    %tr
      %th{:colspan=>2}
        - if ['update', 'create'].include? @four_eyes_review.action
          Nieuwe/gewijzigde waarden
      %th{:colspan=>2}
        - if ['update', 'destroy'].include? @four_eyes_review.action
          Oude waarden
  %tbody
    - changes_for @four_eyes_review.original, @four_eyes_review.updated, @four_eyes_review do |changes|
      - changes.text :authentication_method, empty: t('model_attributes.webservice.no_authentication_method')
      - if @four_eyes_review.equals?(:authentication_method, 'aselect')
        - changes.nested_changes_for :aselect_webservice, heading: false do |aselect_webservice|
          - aselect_webservice.text :app_id
          - aselect_webservice.text :assurance_level, format: Proc.new { |level| t("model_attributes.aselect_webservice.assurance_level_#{level}")}
          - aselect_webservice.nested_changes_for :shared_secrets, label: t('model_attributes.webservice.shared_secrets') do |shared_secret|
            - shared_secret.text :shared_secret, true: t('model_attributes.webservice.new_shared_secret'), false: t('model_attributes.webservice.no_shared_secret')
      - if @four_eyes_review.equals?(:authentication_method, 'saml')
        - changes.nested_changes_for :saml_provider, heading: false do |saml_provider|
          - saml_provider.nested_changes_for :sso_domain, heading: false do |sso_domain|
            - sso_domain.text :name, label: t('model_attributes.webservice.sso_domain_name'), empty: t('model_attributes.webservice.no_sso_domain_name')
          - saml_provider.text :allow_sso, true: t('model_attributes.webservice.allow_sso_true'), false: t('model_attributes.webservice.allow_sso_false')
          - saml_provider.text :entity_id, download_link: :metadata_as_data_uri, filename: :filename, empty: t('model_attributes.webservice.no_metadata')

.clear
%p.actions
  = render partial: 'four_eyes_reviews/actions', locals: {four_eyes_review: @four_eyes_review}
.clear
%br= show_webservice_actions(@four_eyes_review.original.id) if @four_eyes_review.original.id
%br= show_manager_actions_for(Log::SubjectTypes::WEBSERVICE, @four_eyes_review.updated.id)
