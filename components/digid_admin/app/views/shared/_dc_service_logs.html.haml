
-# Deze broncode is openbaar gemaakt vanwege een Woo-verzoek zodat deze
-# gericht is op transparantie en niet op hergebruik. Hergebruik van 
-# de broncode is toegestaan onder de EUPL licentie, met uitzondering 
-# van broncode waarvoor een andere licentie is aangegeven.
-# 
-# Het archief waar dit bestand deel van uitmaakt is te vinden op:
-#   https://github.com/MinBZK/woo-besluit-broncode-digid
-# 
-# Eventuele kwetsbaarheden kunnen worden gemeld bij het NCSC via:
-#   https://www.ncsc.nl/contact/kwetsbaarheid-melden
-# onder vermelding van "Logius, openbaar gemaakte broncode DigiD" 
-# 
-# Voor overige vragen over dit Woo-besluit kunt u mailen met open@logius.nl
-# 
-# This code has been disclosed in response to a request under the Dutch
-# Open Government Act ("Wet open Overheid"). This implies that publication 
-# is primarily driven by the need for transparence, not re-use.
-# Re-use is permitted under the EUPL-license, with the exception 
-# of source files that contain a different license.
-# 
-# The archive that this file originates from can be found at:
-#   https://github.com/MinBZK/woo-besluit-broncode-digid
-# 
-# Security vulnerabilities may be responsibly disclosed via the Dutch NCSC:
-#   https://www.ncsc.nl/contact/kwetsbaarheid-melden
-# using the reference "Logius, publicly disclosed source code DigiD" 
-# 
-# Other questions regarding this Open Goverment Act decision may be
-# directed via email to open@logius.nl

.form_wrapper
  %a{ name: 'front_desk_search' }
  %h2 DC::Service handelingen
  .form_wrapper
    = search_form_for @log_search, as: :log_search, url: url_for(params.merge(anchor: 'log_search')) do |f|
      = render partial: 'shared/search_fields', locals: { f: f }
      = radio_button_tag 'log_search[time_zone]', 'nl', select_time_zone_filter('nl')
      = label(:log_search_time_zone, 'nl', t('front_desks.nl_time'))
      = radio_button_tag 'log_search[time_zone]', 'local', select_time_zone_filter('local')
      = label(:log_search_time_zone, 'local', t('front_desks.local_time'))
  - begin
    %table
      %thead
        %tr= render 'shared/table_header', headers: %W( services.time_of_day services.description services.ip_address _ )

      - @logs.each do |log|
        - present log do |log_presenter|
          %tr
            %td.word-break= log_presenter.created_at
            %td.word-break= log_presenter.name
            %td.word-break= log_presenter.ip_address
            %td
              - if log.account.present? && can?(:read, Account)
                = four_eyes_show_link 'Bekijk', log.account

    = paginate @logs, param_name: 'dc_service_page'
  - rescue
    %p.cert_alert=I18n.t('log_query_timeout')
