
-# Deze broncode is openbaar gemaakt vanwege een Woo-verzoek zodat deze
-# gericht is op transparantie en niet op hergebruik. Hergebruik van 
-# de broncode is toegestaan onder de EUPL licentie, met uitzondering 
-# van broncode waarvoor een andere licentie is aangegeven.
-# 
-# Het archief waar dit bestand deel van uitmaakt is te vinden op:
-#   https://github.com/MinBZK/woo-besluit-broncode-digid
-# 
-# Eventuele kwetsbaarheden kunnen worden gemeld bij het NCSC via:
-#   https://www.ncsc.nl/contact/kwetsbaarheid-melden
-# onder vermelding van "Logius, openbaar gemaakte broncode DigiD" 
-# 
-# Voor overige vragen over dit Woo-besluit kunt u mailen met open@logius.nl
-# 
-# This code has been disclosed in response to a request under the Dutch
-# Open Government Act ("Wet open Overheid"). This implies that publication 
-# is primarily driven by the need for transparence, not re-use.
-# Re-use is permitted under the EUPL-license, with the exception 
-# of source files that contain a different license.
-# 
-# The archive that this file originates from can be found at:
-#   https://github.com/MinBZK/woo-besluit-broncode-digid
-# 
-# Security vulnerabilities may be responsibly disclosed via the Dutch NCSC:
-#   https://www.ncsc.nl/contact/kwetsbaarheid-melden
-# using the reference "Logius, publicly disclosed source code DigiD" 
-# 
-# Other questions regarding this Open Goverment Act decision may be
-# directed via email to open@logius.nl

.form_wrapper
  %a{ name: 'log_search' }
  %h2.log_helper_h2 Transactie logs
  = render 'accounts/log_helper'
  .form_wrapper
    = search_form_for @log_search, as: :log_search, url: account_path(@account, anchor: 'log_search') do |f|
      = render partial: 'shared/search_fields', locals: { f: f, export: export_logs_account_path(@account, format: :csv) }
  - begin
    %table
      %thead
        %tr
          = render 'shared/table_header', headers: %w(services.time_of_day services.description services.ip_address webdienst transactie_log)
      - @logs.each do |log|
        %tr
          %td.word-break= l(log.created_at, format: :default)
          %td.word-break= log.name
          %td.word-break= log.ip_address
          - if can?(:read, Webservice) && log.webservice
            %td.word-break= four_eyes_show_link log.webservice.name, log.webservice, icon: false
          - elsif log.webservice.try(:name)
            %td.word-break= log.webservice.name
          - else
            %td.word-break
          %td
            - if log.transaction_id.present?
              = link_to 'Bekijk', transactions_accounts_path(log.transaction_id), remote: true

    = paginate @logs, param_name: 'account_page'
  - rescue
    %p.cert_alert=I18n.t('log_query_timeout')
