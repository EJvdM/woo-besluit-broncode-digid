
-# Deze broncode is openbaar gemaakt vanwege een Woo-verzoek zodat deze
-# gericht is op transparantie en niet op hergebruik. Hergebruik van 
-# de broncode is toegestaan onder de EUPL licentie, met uitzondering 
-# van broncode waarvoor een andere licentie is aangegeven.
-# 
-# Het archief waar dit bestand deel van uitmaakt is te vinden op:
-#   https://github.com/MinBZK/woo-besluit-broncode-digid
-# 
-# Eventuele kwetsbaarheden kunnen worden gemeld bij het NCSC via:
-#   https://www.ncsc.nl/contact/kwetsbaarheid-melden
-# onder vermelding van "Logius, openbaar gemaakte broncode DigiD" 
-# 
-# Voor overige vragen over dit Woo-besluit kunt u mailen met open@logius.nl
-# 
-# This code has been disclosed in response to a request under the Dutch
-# Open Government Act ("Wet open Overheid"). This implies that publication 
-# is primarily driven by the need for transparence, not re-use.
-# Re-use is permitted under the EUPL-license, with the exception 
-# of source files that contain a different license.
-# 
-# The archive that this file originates from can be found at:
-#   https://github.com/MinBZK/woo-besluit-broncode-digid
-# 
-# Security vulnerabilities may be responsibly disclosed via the Dutch NCSC:
-#   https://www.ncsc.nl/contact/kwetsbaarheid-melden
-# using the reference "Logius, publicly disclosed source code DigiD" 
-# 
-# Other questions regarding this Open Goverment Act decision may be
-# directed via email to open@logius.nl

.form_wrapper
  %h1 #{t("services.organizations.organization")} #{@organization.name}
  .actions_top
    = link_to(t("services.back_to_overview"), dc_organizations_path)
    = link_to(t("services.organizations.edit"), edit_dc_organization_path(@organization), class: 'edit_button') if can? :update, Dc::Organization

  .clear
  = field t("services.organizations.identity") do
    = field "ID", @organization.id
    = field t("services.oin"), @organization.oin
  %hr
  = field t("services.organizations.standard") do
    = field t("services.name"), @organization.name
    = field t("services.description"), @organization.description
  %hr
  = field t("services.organizations.organization_role") do
    %table
      %thead
        %tr
          %th= t("services.name")
          %th= t("services.active")
          %th= t("services.date_from")
          %th= t("services.date_until")
      %tbody.rows
        - @organization.organization_roles.each do |role|
          %tr
            %td= role&.type
            %td= role&.status&.active ? t("services._yes") : t("services._no")
            %td= render_status_from(role)
            %td= render_status_until(role)
  %hr
  = field t("services.validity") do
    = render_status(@organization)
  .actions
    = link_to(t("services.organizations.delete"), dc_organization_path(@organization), class: 'delete_button', data: { confirm: t('are_you_sure_organization') }, method: :delete) if can? :destroy, Dc::Organization
  .clear

.form_wrapper
  %h2= t("services.connections.connections")
  %br= render 'dc/connections/overview'

%br= show_manager_actions_for(Log::SubjectTypes::DC_ORGANIZATION, @organization.id)
