
-# Deze broncode is openbaar gemaakt vanwege een Woo-verzoek zodat deze
-# gericht is op transparantie en niet op hergebruik. Hergebruik van 
-# de broncode is toegestaan onder de EUPL licentie, met uitzondering 
-# van broncode waarvoor een andere licentie is aangegeven.
-# 
-# Het archief waar dit bestand deel van uitmaakt is te vinden op:
-#   https://github.com/MinBZK/woo-besluit-broncode-digid
-# 
-# Eventuele kwetsbaarheden kunnen worden gemeld bij het NCSC via:
-#   https://www.ncsc.nl/contact/kwetsbaarheid-melden
-# onder vermelding van "Logius, openbaar gemaakte broncode DigiD" 
-# 
-# Voor overige vragen over dit Woo-besluit kunt u mailen met open@logius.nl
-# 
-# This code has been disclosed in response to a request under the Dutch
-# Open Government Act ("Wet open Overheid"). This implies that publication 
-# is primarily driven by the need for transparence, not re-use.
-# Re-use is permitted under the EUPL-license, with the exception 
-# of source files that contain a different license.
-# 
-# The archive that this file originates from can be found at:
-#   https://github.com/MinBZK/woo-besluit-broncode-digid
-# 
-# Security vulnerabilities may be responsibly disclosed via the Dutch NCSC:
-#   https://www.ncsc.nl/contact/kwetsbaarheid-melden
-# using the reference "Logius, publicly disclosed source code DigiD" 
-# 
-# Other questions regarding this Open Goverment Act decision may be
-# directed via email to open@logius.nl

= field f.label(:identity, t("services.organizations.identity")) do
  = field f.label(:id, "ID"), @organization.id unless @organization.new_record?
  = field f.label(:oin, t("services.organizations.organization_identification")), f.text_field(:oin, required: true)
%hr
= field f.label(:standaard, t("services.organizations.standard")) do
  = field f.label(:name, t("services.name")), f.text_field(:name, required: true)
  = field f.label(:description, t("services.description")), f.text_area(:description)

%hr
= field f.label(:organization_role, t("services.organizations.organization_role")) do
  = f.fields_for :organization_roles do |v|
    %table
      %thead
        %tr
          %th= t("services.name")
          %th= t("services.active")
          %th= t("services.date_from")
          %th= t("services.date_until")
          %td
      %tbody.rows
        - (@organization.organization_roles.any? ? @organization.organization_roles : [Dc::OrganizationRole.new]).each_with_index do |role, index|
          %tr
            %td
              = select_tag("dc_organization[organization_roles][][type]", options_for_select(Dc::OrganizationRole::TYPES.map {|i| [i.downcase.gsub("_", " ").capitalize, i]}, role&.type))
              %input{type: "hidden", name: "dc_organization[organization_roles][][id]", value: role&.id }
            %td
              %input.checkbox{type: "checkbox", name: "dc_organization[organization_roles][][status][active]", checked: role&.status&.active}
            %td
              %span.datepicker= date_select("dc_organization[organization_roles][][status]", :active_from, include_blank: true, selected: role.status&.active_from&.to_date)
            %td
              %span.datepicker= date_select("dc_organization[organization_roles][][status]", :active_until, include_blank: true, selected: role.status&.active_until&.to_date)
            %td
              = link_to(t("services.remove"), "#", class: index == 0 ? 'delete_button hidden' : 'delete_button')

    %a#add_row.icon_link.new_link{href: "#"}
      %span.icon
      %span.text= t("services.organizations.add_role");

%hr
= render 'dc/shared/status', f: f, status: @organization.status
= render 'shared/form_actions', model: @organization
.clear

